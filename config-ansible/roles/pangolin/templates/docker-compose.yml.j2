services:
  pangolin:
    image: fosrl/pangolin:latest
    container_name: pangolin
    restart: unless-stopped
    volumes:
      - {{ docker_base_dir }}/config/pangolin/:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/"]
      interval: "3s"
      timeout: "3s"
      retries: 5

  gerbil:
    image: fosrl/gerbil:1.0.0
    container_name: gerbil
    restart: unless-stopped
    environment:
      - CLOUDFLARE_EMAIL={{ acme_email }}
      - CLOUDFLARE_DNS_API_TOKEN={{ cloudflare_api_token }}
    depends_on:
      pangolin:
        condition: service_healthy
    command:
      - --reachableAt=http://gerbil:3003
      - --generateAndSaveKeyTo=/var/config/key
      - --remoteConfig=http://pangolin:3001/api/v1/gerbil/get-config
      - --reportBandwidthTo=http://pangolin:3001/api/v1/gerbil/receive-bandwidth
    volumes:
      - {{ docker_base_dir }}/config/pangolin/:/var/config
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - 51820:51820/udp
      - 443:443 # Port for traefik because of the network_mode
      - 80:80 # Port for traefik because of the network_mode
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.gerbil.rule=Host(`gerbil.{{ hostname }}`)"
      - "traefik.http.routers.gerbil.entrypoints=websecure"
      - "traefik.http.routers.gerbil.tls=true"
      - "traefik.http.routers.gerbil.tls.certresolver=letsencrypt"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.gerbil-http.rule=Host(`gerbil.{{ hostname }}`)"
      - "traefik.http.routers.gerbil-http.entrypoints=web"
      - "traefik.http.routers.gerbil-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # Service configuration
      - "traefik.http.services.gerbil.loadbalancer.server.port=3003"

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    network_mode: service:gerbil # Ports appear on the gerbil service
    depends_on:
      pangolin:
        condition: service_healthy
    command:
      - --configFile=/etc/traefik/traefik_config.yml
    volumes:
      - {{ docker_base_dir }}/config/pangolin/traefik:/etc/traefik:ro # Volume to store the Traefik configuration
      - {{ docker_base_dir }}/config/pangolin/letsencrypt:/letsencrypt # Volume to store the Let's Encrypt certificates
networks:
  default:
    driver: bridge
    name: pangolin
