---

- name: Ensure sudo group can sudo without password
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL:ALL) NOPASSWD:ALL'
    validate: 'visudo -cf %s'

# SSH hardening
- name: Update SSH configuration
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
  notify: restart sshd

- name: Ensure SSH service is enabled and running
  service:
    name: sshd
    state: started
    enabled: yes

# UFW configuration
- name: Install UFW
  apt:
    name: ufw
    state: present
    update_cache: yes

- name: Set default UFW policies
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }

- name: Allow SSH connections
  ufw:
    rule: allow
    port: "{{ ssh_port | default('22') }}"
    proto: tcp

- name: Allow HTTP connections
  ufw:
    rule: allow
    port: '80'
    proto: tcp

- name: Allow HTTPS connections
  ufw:
    rule: allow
    port: '443'
    proto: tcp

- name: Allow WireGuard VPN connections
  ufw:
    rule: allow
    port: '51820'
    proto: udp

- name: Allow ssh connections for gitlab
  ufw:
    rule: allow
    port: '6022'
    proto: udp

- name: Allow otel grpc connections
  ufw:
    rule: allow
    port: '4317'
    proto: tcp

- name: Allow Deluge inbound torrent connections (TCP)
  ufw:
    rule: allow
    port: "{{ deluge_inbound_port }}"
    proto: tcp

- name: Allow Deluge inbound torrent connections (UDP)
  ufw:
    rule: allow
    port: "{{ deluge_inbound_port }}"
    proto: udp

- name: Enable UFW
  ufw:
    state: enabled

# Install and configure unattended-upgrades
- name: Install unattended-upgrades
  apt:
    name: unattended-upgrades
    state: present

- name: Configure unattended-upgrades
  template:
    src: 50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: '0644'

- name: Enable unattended-upgrades
  template:
    src: 20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    owner: root
    group: root
    mode: '0644'

# Install and configure Fail2Ban
- name: Install Fail2Ban
  apt:
    name: fail2ban
    state: present

- name: Configure Fail2Ban for SSH
  template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban

- name: Ensure Fail2Ban service is enabled and running
  service:
    name: fail2ban
    state: started
    enabled: yes

- name: Get latest Fail2Ban logs
  command: journalctl -u fail2ban -n 50 --no-pager
  register: fail2ban_logs
  changed_when: false
  become: true

- name: Display Fail2Ban logs
  debug:
    var: fail2ban_logs.stdout_lines

- name: Get latest unattended-upgrades logs
  command: tail -n 50 /var/log/unattended-upgrades/unattended-upgrades-dpkg.log
  register: unattended_upgrades_logs
  changed_when: false
  become: true

- name: Display unattended-upgrades logs
  debug:
    var: unattended_upgrades_logs.stdout_lines

- name: Unlock admin user account
  command: usermod -U "{{ admin_username }}"
  become: true


